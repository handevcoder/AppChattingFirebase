package hi.iwansyy.appchatfirebase.viewsimport android.os.Bundleimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.fragment.app.Fragmentimport androidx.navigation.fragment.findNavControllerimport com.google.firebase.auth.ktx.authimport com.google.firebase.firestore.ktx.firestoreimport com.google.firebase.ktx.Firebaseimport hi.iwansyy.appchatfirebase.Rimport hi.iwansyy.appchatfirebase.databinding.FragmentLoginBindingimport hi.iwansyy.appchatfirebase.model.UserModelimport hi.iwansyy.appchatfirebase.utils.ConstantUtilimport hi.iwansyy.appchatfirebase.utils.LocalSessionimport hi.iwansyy.appchatfirebase.utils.ShowLoadingimport hi.iwansyy.appchatfirebase.utils.showToastimport kotlinx.android.synthetic.main.fragment_register.*class LoginFragment : Fragment(), ShowLoading {    private lateinit var binding: FragmentLoginBinding    private val auth by lazy { Firebase.auth }    private val db by lazy { Firebase.firestore }    private val localSession by lazy { LocalSession(requireContext()) }    override fun onCreateView(        inflater: LayoutInflater, container: ViewGroup?,        savedInstanceState: Bundle?    ): View {        binding = FragmentLoginBinding.inflate(inflater, container, false).apply {            btnLog.setOnClickListener {                if (etEmail.text.toString().isNotEmpty() && etPassword.text.toString()                        .isNotEmpty()                ) {                    isLoading()                    auth.createUserWithEmailAndPassword(                        etEmail.text.toString(),                        etPassword.text.toString()                    )                        .addOnSuccessListener {                            it.user?.uid?.let { uid ->                                localSession.uid = uid                                db.collection(ConstantUtil.COLLECTION).document(uid)                                    .set(UserModel(uid, etEmail.text.toString()))                                    .addOnSuccessListener {                                        hideLoading()                                        Log.d("Login", "Successfully created with uid: ${uid}")                                        findNavController().navigate(R.id.action_loginFragment_to_mainFragment)                                    }.addOnFailureListener { exc ->                                        exc.printStackTrace()                                        hideLoading()                                        showToast("Failed to create user")                                        Log.d("Login", "Failed created user: ${exc.message}")                                    }                            }                            hideLoading()                        }                    Log.d("Login", "Email is ${etEmail} & Password${etPassword}")                } else {                    showToast("Email and Password cannot be empty")                }            }            tvReg.setOnClickListener {                findNavController().navigate(R.id.action_loginFragment_to_registerFragment)            }        }        return binding.root    }    override fun onStart() {        super.onStart()        if (localSession.uid.isNotEmpty()) findNavController().navigate(R.id.action_loginFragment_to_mainFragment)    }    override fun isLoading() {        binding.pgBar.visibility = View.VISIBLE        binding.btnLog.visibility = View.INVISIBLE        binding.tvReg.visibility = View.INVISIBLE    }    override fun hideLoading() {        binding.pgBar.visibility = View.GONE        binding.pgBar.visibility = View.GONE        binding.btnLog.visibility = View.VISIBLE        binding.tvReg.visibility = View.VISIBLE    }}